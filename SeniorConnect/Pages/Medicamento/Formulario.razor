@inherits AuthorizedComponent
@page "/medicamento/criar"
@page "/medicamento/editar/{Id:int}"

<h1>@Titulo Medicamento</h1>

<hr />
<EditForm Model="@medicamento" OnValidSubmit="SalvarMedicamento">
    <DataAnnotationsValidator />

    @if (isEdit)
    {
        <div class="mb-3">
            <div class="col-md-4">
                <label for="Id" class="form-label">Id</label>
            </div>
            <div class="col-md-4">
                <InputNumber class="form-control" @bind-Value="medicamento.Id" readonly="@isEdit" />
            </div>
        </div>
    }

    <div class="mb-3">
        <div class="col-md-4">
            <label for="Name" class="form-label">Descrição</label>
        </div>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="medicamento.Descricao" readonly="@processing"/>
            <ValidationMessage For="@(() => medicamento.Descricao)" />
        </div>
    </div>

    <div class="mb-3">
        <div class="col-md-4">
            <label for="Name" class="form-label">Posição</label>
        </div>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value=medicamento.PosicaoNaCaixaRemedio readonly="@processing"/>
            <ValidationMessage For="@(() => medicamento.PosicaoNaCaixaRemedio)" />
        </div>
    </div>

    @if (isEdit)
    {
        <div class="accordion col-md-12" style="margin-bottom: 16px">
            <div class="accordion-item">
                <h2 class="accordion-header" id="headingThree">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                        Alertas do Medicamento
                    </button>
                </h2>
                <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <SeniorConnect.Pages.LembreteMedicamento.Lista CodigoRemedio="Id"></SeniorConnect.Pages.LembreteMedicamento.Lista>
                    </div>
                </div>
            </div>
        </div>
    }
    
    <Loading IsLoading="processing">
        <div class="form-group col-md-12">
            <button type="submit" class="btn btn-primary">Salvar</button>
            <button class="btn btn-light" type="button" @onclick="Return">Retornar</button>
        </div>
    </Loading>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    protected bool processing;
    protected string Titulo = "Criar";
    protected MedicamentoModel medicamento = new();
    protected bool isEdit = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (Id != 0)
        {
            Titulo = "Editar";
            isEdit = true;
        }

        if (firstRender)
        {
            medicamento.AssinaturaId = UsuarioLogado.AssinaturaId;

            if (Id != 0)
            {
                processing = true;
                var respostaBusca = await ApiCallHelper.Get<MedicamentoModel>($"/Medicamento/v1/RecuperaMedicamento/{Id}", JwtToken);

                if (respostaBusca.Sucesso)
                    medicamento = respostaBusca.Dados;

                processing = false;
            }
            StateHasChanged();
        }
    }

    protected async Task SalvarMedicamento()
    {
        if (isEdit)
        {
            processing = true;
            var respostaEdit = await ApiCallHelper.Post<MedicamentoModel, MedicamentoModel>("/Medicamento/v1/Editar", medicamento, JwtToken);
            processing = false;

            if (respostaEdit.Sucesso)
                NavigationManager.NavigateTo("/Medicamento");
            else
                await JsRuntime.InvokeVoidAsync("alert", respostaEdit.Mensagem);
        }
        else
        {
            processing = true;
            var respostaCreate = await ApiCallHelper.Post<MedicamentoModel, MedicamentoModel>("/Medicamento/v1/Criar", medicamento, JwtToken);
            processing = false;

            if (respostaCreate.Sucesso)
            {
                Id = respostaCreate.Dados.Id;
                await OnAfterRenderAsync(true);
            }
            else
                await JsRuntime.InvokeVoidAsync("alert", respostaCreate.Mensagem);
        }
    }

    protected void Return() => NavigationManager.NavigateTo("/Medicamento");
}