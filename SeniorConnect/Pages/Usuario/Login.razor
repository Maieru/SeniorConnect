@page "/usuario/login/{returnUrl?}"

@using System.Security.Claims
@using SeniorConnect.Data;
@inject AuthenticationStateProvider AuthenticationStateProvider
@layout EmptyLayout;

<h1>Login</h1>

@code {
    // https://codepen.io/soufiane-khalfaoui-hassani/pen/LYpPWda
}

<form @onsubmit="HandleSubmit">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required @bind="Username">
    <br />
    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required @bind="Password">
    <br />

    <button type="submit">Login</button>

    <br />
    <br />

    <a href="usuario/criarUsuario">Criar usuário</a>
</form>

@code {
    [Parameter]
    public string? ReturnUrl { get; set; }

    public string Username { get; set; }
    public string Password { get; set; }

    private async Task HandleSubmit()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo(ReturnUrl);
            return;
        }

        var usuario = new UsuarioModel() { Usuario = Username, Senha = Password, Id = 1 };

        await (AuthenticationStateProvider as UsuarioAuthenticationStateProvider).SetAuthenticationStateAsync(usuario);
        NavigationManager.NavigateTo(ReturnUrl);
    }
}